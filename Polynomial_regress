#Predicting profit using multi-linear regression
#importing libraries 
import pandas as pd 
import numpy as np 
import matplotlib.pyplot as plt 

#Importing CSV file
data = pd.read_csv("Position_Salaries.csv")

#X - Index 1 is a Independent variable and it should always be in matrix that's 
#why 1:2 has been mentioned.
#Y - Index 2 is a dependent variable 
X = data.iloc[:, 1:2].values
Y = data.iloc[:, 2].values

"""
#Below functionality is not required as he dataset is small
#Splitting dataset into train and test dataset
from sklearn.model_selection import train_test_split 
X_train,X_test,Y_train,Y_test = train_test_split(X,Y,test_size=0.2,random_state=0)
"""

#Fitting Linear Regression to the dataset
from sklearn.linear_model import LinearRegression
lin_reg1 = LinearRegression()
lin_reg1.fit(X,Y)

#Fitting Polinomial Regression to the dataset
from sklearn.preprocessing import PolynomialFeatures
poly_reg = PolynomialFeatures(degree=2)
X_poly = poly_reg.fit_transform(X)
lin_reg2 = LinearRegression()
lin_reg2.fit(X_poly,Y)

#Plotting Linear Regression
plt.scatter(X,Y)
plt.plot(X,lin_reg1.predict(X),color="Red")
plt.xlabel("Experience")
plt.ylabel("Salary")
plt.title("Actual vs Expected Salary")
plt.show()

#plotting Polynomial regression
for i in np.arange(2,5):
    poly_reg = PolynomialFeatures(i)
    X_poly = poly_reg.fit_transform(X)
    lin_reg2 = LinearRegression()
    lin_reg2.fit(X_poly,Y)
    plt.scatter(X,Y)
    plt.plot(X,lin_reg2.predict(poly_reg.fit_transform(X)),color="Red")
    plt.xlabel("Experience")
    plt.ylabel("Salary")
    plt.title("Actual vs Expected Salary")
    plt.show()






